name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # IMAGE_NAME: image
  IMAGE_NAME: dockerworkshopsydor/curl
  IMAGE_NAME_GIT: dockerworkshopsydor/git

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file dockerlands/curl/Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u dockerworkshopsydor --password-stdin

      - name: Push image
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_NAME=$IMAGE_NAME
          VERSION=$(date +%s)
          echo $VERSION

          docker tag $IMAGE_NAME $IMAGE_NAME:$VERSION
          docker push $IMAGE_NAME:$VERSION
          docker tag $IMAGE_NAME $IMAGE_NAME:latest
          docker push $IMAGE_NAME:latest

      - name: Build git image
        run: docker build . --file _git/Dockerfile --tag $IMAGE_NAME_GIT

      - name: Log into registry
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u dockerworkshopsydor --password-stdin

      - name: Push image
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_NAME=$IMAGE_NAME_GIT
          VERSION=$(date +%s)
          echo $VERSION

          docker tag $IMAGE_NAME $IMAGE_NAME:$VERSION
          docker push $IMAGE_NAME:$VERSION
          docker tag $IMAGE_NAME $IMAGE_NAME:latest
          docker push $IMAGE_NAME:latest
